[tracking]
ignore=_*$*Formatter$*BlockManager$*Block$BlockPlacement$*TextAdjustment$*Error$*Warning$is_*$*Mixin$TestCase$NoseTester$KnownFailureTest$DeprecatedOption$check_*$maybe_*$*Engine$*Exception$TextReader$*Parser$InvalidColumnName$*Iterator$PossiblePrecisionLoss$*io.packers.*$*io.gbq.*$*.<lambda>$CompatValidator$visit_*$*util.testing.*$*util.nosetester.*$pandas.msgpack.*$str_*$pandas.core.internals.*$pandas.tseries.converter.*$pandas.types.dtypes.*$pandas.hashtable.*$validate_*$pandas.algos.*$ExcelCell$AccessorProperty$pandas.core.config.*$pandas.util.decorators.*$pandas.compat.*$pandas.lib.*$pandas.core.common.in_*$pandas.core.common.needs_*$pandas.formats.format.*$expanding_*$rolling_*$pandas.core.strings.*$pandas.tslib.array_*$pandas.tslib.cast_*$pandas.tslib.convert_*$pandas.tslib.get_*$pandas.tslib.ints_*$pandas.tslib.parse_*$CParserWrapper$ValueLabelTypeMismatch$SQLAlchemyRequired$pandas._sparse.*$IncompatibleFrequency$PandasObject

[analysis]
filter=pandas.core.frame.apply

[logging.depth]
pandas.core.frame.apply=5
pandas.io.parsers.read_csv=5